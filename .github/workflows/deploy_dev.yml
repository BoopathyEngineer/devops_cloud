
# name: GXP Develop
# on:
#     push:
#       branches:
#         - main
#       paths-ignore:
#         - '*.md'
#     workflow_dispatch:

# jobs:
#   build-deploy:
#     name: Deploy gxp with SAM
#     runs-on: ubuntu-latest
#     timeout-minutes: 30
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v1
#         with:
#           python-version: "3.9"

#       - name: Set up SAM
#         uses: aws-actions/setup-sam@v1
#         with:
#           version: 1.37.0

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           # aws-region: us-east-2
#           aws-region: us-west-1

#       - name: Prepare variables for SAM
#         id: ssm_params
#         run: |
#           ENV=dev
#           COGNITO=us-west-1_MXDHqjttg
#           SUB_ENV=''
#           DB_NAME=gxp
#           CLIENT=vrvc7adabbtqsvheddjikvq8c
#           DOMAIN=api.service.zita.ai
#           CERT_ARN=$(aws acm list-certificates --certificate-statuses ISSUED \
#           --query 'CertificateSummaryList[?DomainName==`api.service.zita.ai`].CertificateArn' \
#           --output text)

#           PARAMS="ParameterKey=Environment,ParameterValue=${ENV}"
#           PARAMS+=" ParameterKey=SubEnv,ParameterValue=${SUB_ENV}"
#           PARAMS+=" ParameterKey=CognitoID,ParameterValue=${COGNITO}"
#           PARAMS+=" ParameterKey=ClientID,ParameterValue=${CLIENT}"
#           PARAMS+=" ParameterKey=DomainName,ParameterValue=${DOMAIN}"
#           PARAMS+=" ParameterKey=CertificateArn,ParameterValue=${CERT_ARN}"
          
#           echo SUB_ENV=$SUB_ENV >> $GITHUB_ENV
#           echo BRANCH_NAME=$BRANCH_NAME >> $GITHUB_ENV
#           echo COGNITO=$COGNITO >> $GITHUB_ENV
#           echo ENV=$ENV >> $GITHUB_ENV
#           echo CLIENT=$CLIENT >> $GITHUB_ENV
#           echo PARAMS=$PARAMS >> $GITHUB_ENV
          

#       - name: SAM build
#         run: sam build --use-container --template deploy/api-template.yaml --config-file deploy/samconfig-prod.toml

#       - name: SAM deploy
#         run: |
#           sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
#           --stack-name GXP-$ENV \
#           --config-file deploy/samconfig-prod.toml --debug \
#           --capabilities CAPABILITY_NAMED_IAM \
#           --parameter-overrides ${PARAMS}

name: DCQC Feature
on:
    pull_request:
      branches:
        - testint
        - development
      paths-ignore:
        - '*.md'
    workflow_dispatch:

jobs:
  build-deploy:
    name: Deploy DCQC with SAM
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Set up SAM
        uses: aws-actions/setup-sam@v1
        with:
          version: 1.37.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Prepare variables for SAM
        id: ssm_params
        run: |
          DCQC_ENV=feature
          COGNITO=us-east-1_tYM4L1Bcc
          BRANCH_NAME=${{github.head_ref}}
          SUB_ENV=${BRANCH_NAME:0:30}
          DB_NAME=dcqc-${SUB_ENV}

          PARAMS="ParameterKey=Environment,ParameterValue=${DCQC_ENV}"
          PARAMS+=" ParameterKey=SubEnv,ParameterValue=${SUB_ENV}"
          PARAMS+=" ParameterKey=CognitoID,ParameterValue=${COGNITO}"

          echo SUB_ENV=$SUB_ENV >> $GITHUB_ENV
          echo COGNITO=$COGNITO >> $GITHUB_ENV
          echo BRANCH_NAME=$BRANCH_NAME >> $GITHUB_ENV
          echo DCQC_ENV=$DCQC_ENV >> $GITHUB_ENV
          echo PARAMS=$PARAMS >> $GITHUB_ENV

      - name: SAM build
        run: sam build --use-container --template deploy/dcqc-template.yaml --config-file deploy/samconfig-prod.toml

      - name: SAM deploy
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
          --stack-name DCQC-$DCQC_ENV-$SUB_ENV \
          --config-file deploy/samconfig-prod.toml --debug \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides ${PARAMS}

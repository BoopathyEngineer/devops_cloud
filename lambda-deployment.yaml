AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaExecutionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                  - "s3:GetObject"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                Resource: "*"

  # Lambda Function
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "index.handler"  # Adjust according to your Lambda function
      Role: !GetAtt LambdaExecutionRole.Arn
      FunctionName: "MyLambdaFunction"
      Runtime: "python3.9"  # Adjust based on your runtime
      Code:
        S3Bucket: !Ref LambdaDeploymentBucket  # Reference to an S3 bucket with the Lambda code
        S3Key: "lambda-function.zip"  # Replace with your code's S3 key
      MemorySize: 128
      Timeout: 15  # 15 seconds, adjust according to your use case

  # S3 Bucket for Lambda Code (if needed)
  LambdaDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "lambda-deployment-bucket"

Outputs:
  LambdaFunctionName:
    Description: "Name of the Lambda Function"
    Value: !Ref MyLambdaFunction

  LambdaFunctionArn:
    Description: "ARN of the Lambda Function"
    Value: !GetAtt MyLambdaFunction.Arn

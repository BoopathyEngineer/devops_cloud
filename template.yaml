AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  # Lambda Function 1
  MyLambdaFunction1:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./src
      MemorySize: 128
      Timeout: 3
      Role: arn:aws:iam::273354660155:role/lambda_learn
      Environment:
        Variables:
          KEY: "value"
  
  # Lambda Function 2
  MyLambdaFunction2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./src
      MemorySize: 128
      Timeout: 3
      Role: arn:aws:iam::273354660155:role/lambda_learn
      Environment:
        Variables:
          KEY: "value"
          
  # API Gateway 1
  MyApi1:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyApi1
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        paths:
          /hello1:
            get:
              responses:
                '200':
                  description: "Hello from Lambda 1"
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:REGION:273354660155:lambda:path/2015-03-31/functions/arn:aws:lambda:REGION:273354660155:function:MyLambdaFunction1/invocations
                httpMethod: POST
                type: aws_proxy

  # API Gateway 2
  MyApi2:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyApi2
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        paths:
          /hello2:
            get:
              responses:
                '200':
                  description: "Hello from Lambda 2"
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:REGION:273354660155:lambda:path/2015-03-31/functions/arn:aws:lambda:REGION:273354660155:function:MyLambdaFunction2/invocations
                httpMethod: POST
                type: aws_proxy
